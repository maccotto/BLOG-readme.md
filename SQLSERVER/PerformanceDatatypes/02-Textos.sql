/*
  ********************************************************************
  Tipos de datos alfanumericos
  TriggerDB Consulting
  http://www.triggerdb.com
  Maximiliano Damian Accotto 
  ********************************************************************
*/


--- CHAR , VARCHAR, NCHAR, NVARCHAR, VARCHAR(MAX)

DECLARE @C CHAR(36) = 'HOLA'
SELECT LEN(@C),DATALENGTH(@C)

DECLARE @V VARCHAR(36) = 'HOLA'
SELECT LEN(@V),DATALENGTH(@V)


USE tempdb 
GO

CREATE TABLE TCHAR (C1 CHAR(100),
                    C2 CHAR(100),
					C3 CHAR(100)
					)

CREATE TABLE TVARCHAR (C1 VARCHAR(100),
                    C2 VARCHAR(100),
					C3 VARCHAR(100)
					)
GO

DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'COLUMNA 1',
'COLUMNA 2',
'COLUMNA 3'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2

INSERT INTO TVARCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'COLUMNA 1',
'COLUMNA 2',
'COLUMNA 3'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2
GO

EXEC SP_SPACEUSED 'DBO.TCHAR'
EXEC SP_SPACEUSED 'DBO.TVARCHAR'

SELECT * FROM DBO.TCHAR
SELECT * FROM DBO.TVARCHAR 

--- CREAMOS INDICES , CORRERLOS DE A UNO

CREATE NONCLUSTERED INDEX [IX1_TCHAR]
ON [dbo].[TCHAR] ([C1])

CREATE NONCLUSTERED INDEX [IX1_TVARCHAR]
ON [dbo].[TVARCHAR] ([C1])

EXEC SP_SPACEUSED 'DBO.TCHAR'
EXEC SP_SPACEUSED 'DBO.TVARCHAR'

SELECT COUNT(1) FROM DBO.TCHAR
WHERE C1 = 'COLUMNA 1'

SELECT COUNT(1) FROM DBO.TVARCHAR
WHERE C1 = 'COLUMNA 1'


DROP TABLE DBO.TCHAR
DROP TABLE DBO.TVARCHAR

------ VARCHAR 1 VS CHAR(1)
USE tempdb 
CREATE TABLE TCHAR (C1 CHAR(1),
                    C2 CHAR(1),
					C3 CHAR(1)
					)

CREATE TABLE TVARCHAR (C1 VARCHAR(1),
                    C2 VARCHAR(1),
					C3 VARCHAR(1)
					)
GO


DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'1',
'2',
'3'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2

INSERT INTO TVARCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'1',
'2',
'3'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2
GO

EXEC SP_SPACEUSED 'DBO.TCHAR'
EXEC SP_SPACEUSED 'DBO.TVARCHAR'

SELECT * FROM DBO.TCHAR
SELECT * FROM DBO.TVARCHAR

DROP TABLE DBO.TCHAR
DROP TABLE DBO.TVARCHAR

---- VARCHAR(5) VS CHAR(5)

CREATE TABLE TCHAR (C1 CHAR(5),
                    C2 CHAR(5),
					C3 CHAR(5)
					)

CREATE TABLE TVARCHAR (C1 VARCHAR(5),
                    C2 VARCHAR(5),
					C3 VARCHAR(5)
					)
GO


DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'12',
'22',
'33'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2

INSERT INTO TVARCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'12',
'22',
'33'
FROM MASTER.DBO.SYSCOLUMNS S1,
 MASTER.DBO.SYSCOLUMNS  S2
GO

EXEC SP_SPACEUSED 'DBO.TCHAR'
EXEC SP_SPACEUSED 'DBO.TVARCHAR'

SELECT * FROM DBO.TCHAR
SELECT * FROM DBO.TVARCHAR

DROP TABLE DBO.TCHAR
DROP TABLE DBO.TVARCHAR

---------------------------------------------------------------------
-- UNICODE
---------------------------------------------------------------------

USE TEMPDB
GO

DECLARE @V1 VARCHAR(8000)

DECLARE @V2 NVARCHAR(4000)

CREATE TABLE TNOUNICODE (C1 VARCHAR(255),
                         C2 VARCHAR(255),
				      	C3 VARCHAR(255)
					)

CREATE TABLE TUNICODE (C1 NVARCHAR(255),
                    C2 NVARCHAR(255),
					C3 NVARCHAR(255)
					)
GO

DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TNOUNICODE WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'HOLA MUNDO 12345',
'HOLA MUNDO 234567890000000',
'HOLA MUNDO XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
FROM MASTER.DBO.SYSCOLUMNS S1,
MASTER.DBO.SYSCOLUMNS  S2

DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TUNICODE WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'HOLA MUNDO 12345',
'HOLA MUNDO 234567890000000',
'HOLA MUNDO XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
FROM MASTER.DBO.SYSCOLUMNS S1,
MASTER.DBO.SYSCOLUMNS  S2

EXEC SP_SPACEUSED 'TNOUNICODE'
EXEC SP_SPACEUSED 'TUNICODE'

SELECT * FROM TNOUNICODE
SELECT * FROM TUNICODE

DROP TABLE TNOUNICODE
DROP TABLE TUNICODE
---------------------------------------------------------------------
-- VARCHAR(MAX)
---------------------------------------------------------------------

USE tempdb
GO

DROP TABLE NOTAS 

CREATE TABLE DBO.NOTAS (ID INT IDENTITY,
                        NOTA TEXT,
						NOTA2 VARCHAR(MAX))
GO

-- INSERTAMOS VALORES EN NOTAS

INSERT INTO DBO.NOTAS (NOTA,NOTA2) 
VALUES ('ESTE ES EL CAMPO TEXT VIEJO',
'ESTE ES EL NUEVO CAMPO VARCHAR(MAX) HASTA 2GB')
GO
-- VEMOS QUE PASA SI QUEREMOS USAR LEFT SOBRE EL CAMPO TEXT

SELECT LEFT(NOTA,10) FROM DBO.NOTAS

-- AL NO PODER APLICAR UNA FUNCION DE CADENA SOBRE EL TEXT DEBEMOS HACER ESTO
DECLARE @VAR VARBINARY(16)
SELECT @VAR = TEXTPTR(NOTA) FROM DBO.NOTAS
READTEXT DBO.NOTAS.NOTA @VAR 0 10

-- AHORA VAMOS QUE SE PUEDE APLICAR LEFT SOBRE EL CAMPO VARCHAR(MAX)
SELECT LEFT(NOTA2,10) FROM DBO.NOTAS
 
--- size

USE tempdb 
GO

CREATE TABLE TVARCHARMAX(I INT IDENTITY, 
                         C1 VARCHAR(MAX),
						 C2 VARCHAR(MAX),
						 C3 VARCHAR(MAX)
						 )
GO

CREATE TABLE TVARCHAR(I INT IDENTITY, 
                         C1 VARCHAR(8000),
						 C2 VARCHAR(8000),
						 C3 VARCHAR(8000)
						 )
GO

--- INSERT DATA // CORRER LOS INSERT POR SEPARADO Y MEDIR TIEMPOS

DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TVARCHARMAX WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'HOLA MUNDO',
'HOLA MUNDO 2',
'HOLA MUNDO 3'
FROM MASTER.DBO.SYSCOLUMNS S1,
MASTER.DBO.SYSCOLUMNS  S2


DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO TVARCHAR WITH (TABLOCK) (C1, C2, C3) 
SELECT TOP (@MAXVALUE)
'HOLA MUNDO',
'HOLA MUNDO 2',
'HOLA MUNDO 3'
FROM MASTER.DBO.SYSCOLUMNS S1,
MASTER.DBO.SYSCOLUMNS  S2

EXEC SP_SPACEUSED 'TVARCHARMAX'
EXEC SP_SPACEUSED 'TVARCHAR'

SELECT * FROM TVARCHARMAX
SELECT * FROM TVARCHAR

CREATE INDEX IX1_TMAX ON TVARCHARMAX (C1)
CREATE INDEX IX1_TMAX ON TVARCHAR(C1)
CREATE INDEX IX1_TMAX ON TVARCHARMAX (I) INCLUDE (C1)


DROP TABLE TVARCHARMAX
DROP TABLE TVARCHAR


---------------------------------------------------------------------
-- NULLS
---------------------------------------------------------------------
DROP TABLE TESTNULL

CREATE TABLE TESTNULL (ID INT IDENTITY,
                       VALOR VARCHAR(255) NULL
					   )
GO

INSERT INTO TESTNULL (VALOR)
VALUES ('TRIGGERDB'),(NULL),('SQL SERVER'),('SQL'),('')

SELECT * FROM TESTNULL
SELECT * FROM TESTNULL WHERE VALOR <> 'SQL'
SELECT * FROM TESTNULL WHERE VALOR <> 'SQL' OR VALOR IS NULL 
SELECT * FROM TESTNULL WHERE VALOR NOT IN ('SQL','TRIGGERDB')

SELECT COUNT(VALOR) FROM TESTNULL
SELECT COUNT(ISNULL(VALOR,1)) FROM TESTNULL
SELECT COUNT(*) FROM TESTNULL

DROP TABLE TESTNULL

--- CON NUMEROS

CREATE TABLE TESTNULL (ID INT IDENTITY,
                       VALOR INT NULL
					   )
GO

INSERT INTO TESTNULL (VALOR)
VALUES (1),(NULL),(1),(1),(1)

SELECT SUM(VALOR) FROM TESTNULL
SELECT MIN(VALOR) FROM TESTNULL
SELECT AVG(VALOR) FROM TESTNULL




---------------------------------------------------------------------
-- CONVERT_IMPLICIT
---------------------------------------------------------------------
USE AdventureWorks2012 
GO

DROP TABLE T1

CREATE TABLE dbo.t1
    (Id INT IDENTITY(1, 1)
    ,MyKey VARCHAR(50)
    ,MyValue VARCHAR(50)) ;
CREATE UNIQUE CLUSTERED INDEX PK_t1 ON dbo.t1 ([Id] ASC) ;
CREATE UNIQUE NONCLUSTERED INDEX IX_Test ON dbo.t1 (MyKey) ;
GO

SELECT TOP 1000000
        IDENTITY( INT,1,1 ) AS n
INTO    #Tally
FROM    Master.dbo.SysColumns sc1
       ,Master.dbo.SysColumns sc2

INSERT  INTO dbo.t1 (MyKey, MyValue)
        SELECT TOP 1000000
                'UniqueKey' + CAST(n AS VARCHAR)
               ,'Description'
        FROM    #Tally ;

DROP TABLE #Tally;

SELECT  MyValue
FROM    dbo.t1
WHERE   MyKey = 'UniqueKey333';

SELECT  MyValue
FROM    dbo.t1
WHERE   MyKey = N'UniqueKey333';

---------------------------------------------------------------------
-- LIKE Predicate
---------------------------------------------------------------------

CREATE TABLE Employees (EMPID INT IDENTITY,
                        FIRSTNAME VARCHAR(255),
						LASTNAME VARCHAR(255)
						)
GO

DECLARE @MAXVALUE INT 
SET @MAXVALUE = 1000000 --1 MILLION

INSERT INTO Employees WITH (TABLOCK) (FIRSTNAME,LASTNAME) 
SELECT TOP (@MAXVALUE)
'FERNANDO',
'GONZALEZ'
FROM MASTER.DBO.SYSCOLUMNS S1,
MASTER.DBO.SYSCOLUMNS  S2

UPDATE TOP (100) Employees 
SET FIRSTNAME='MAXIMILIANO'
,LASTNAME = 'ACCOTTO'

CREATE INDEX IX1 ON Employees(LASTNAME)
GO

-- LOS QUE EMPIEZAN CON A

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE 'A%'

-- LOS QUE TERMINA  CON O

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '%O'

-- LOS QUE CONTIENEN CCO

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '%CCO%'

-- LOS QUE EL SEGUNDO CARACTER ES C

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '_C%'

-- LOS QUE EL PRIMER CARACTER SON LA LETRA A B O C

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '[ABC]%'

-- LOS QUE EL PRIMER CARACTER VAN DE LA LETRA A A LA D

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '[A-D]%'

--  LOS QUE EL PRIMER CARACTER NO VAN DE LA F A LA Z

SELECT EMPID,LASTNAME 
FROM Employees
WHERE LASTNAME LIKE '[^F-Z]%'
 

DROP TABLE Employees

---------------------------------------------------------------------
-- Concatenation
---------------------------------------------------------------------
USE AdventureWorks2012 
GO

-- convert NULL to empty string
SELECT TITLE,FIRSTNAME, LASTNAME,   
 COALESCE( N',' + TITLE, N'')  + ' ' + FirstName + ' ' +  LastName   AS T
FROM [Person].[Person]

-- using CONCAT (SQL 2012 O SUP)
SELECT TITLE,FIRSTNAME, LASTNAME,   
 CONCAT(TITLE, ' ', FIRSTNAME, ' ', LASTNAME) AS T
FROM [Person].[Person]


---------------------------------------------------------------------
-- String Length
---------------------------------------------------------------------

SELECT LEN(N'xyz'); -- 3
SELECT DATALENGTH(N'xyz'); -- 6

SELECT LEN('xyz'); -- 3
SELECT DATALENGTH('xyz'); -- 3

---------------------------------------------------------------------
-- String Alteration
---------------------------------------------------------------------

SELECT REPLACE('.1.2.3.', '.', '/'); -- '/1/2/3/'

SELECT REPLICATE('0', 10); -- '0000000000'

SELECT STUFF(',x,y,z', 1, 1, ''); -- 'x,y,z'

---------------------------------------------------------------------
-- String Formating
---------------------------------------------------------------------

SELECT UPPER('aBcD'); -- 'ABCD'
SELECT LOWER('aBcD'); -- 'abcd'
SELECT RTRIM(LTRIM('   xyz   ')); -- 'xyz'
SELECT FORMAT(1759, '000000000'); -- '0000001759'

-- COALESCE vs. ISNULL
DECLARE
  @x AS VARCHAR(3) = NULL,
  @y AS VARCHAR(10) = '1234567890';

SELECT COALESCE(@x, @y) AS [COALESCE], ISNULL(@x, @y) AS [ISNULL];

